name: Bump minor version
permissions:
  deployments: write
  contents: write

on:
  workflow_call:

jobs:
  bump_version:
    outputs:
      version: ${{ steps.bump_version.outputs.version }}
    name: bump version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Set local git user
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "${{ github.event.sender.login }}@users.noreply.github.com"
      - name: Bump version
        id: bump_version
        run: |
          echo "current_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          echo "new_version=$(npm version patch --no-git-tag-version --allow-same-version)" >> $GITHUB_OUTPUT
      - name: Add, Commit, Tag and push changes
        if: ${{ steps.bump_version.outputs.new_version != '' }}
        run: |
          gh pr checkout -b bump-version-${{ steps.bump_version.outputs.new_version }}
          git add package.json package-lock.json
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          if git rev-parse "$NEW_VERSION" >/dev/null 2>&1; then
            echo "Tag ${{ steps.bump_version.outputs.new_version }} already exists"
            echo "Bumping version again to avoid conflicts"
            NEW_VERSION=$(npm version patch --no-git-tag-version --allow-same-version)
            git add package.json package-lock.json
            git commit -m "Bumping version again - now version $NEW_VERSION"
          else
            echo "Version bumped to ${{ steps.bump_version.outputs.new_version }} - moving on"
          fi
          git tag -a "${{ steps.bump_version.outputs.new_version }}" -m "Version bumped from v${{ steps.bump_version.outputs.current_version }} to ${{ steps.bump_version.outputs.new_version }}"
          git push
          git push --tags
      - name: Merge Pull Request
        run: |
          gh pr merge bump-version-${{ steps.bump_version.outputs.new_version }} --delete-branch --squash --auto --admin
          echo "Version bumped to ${{ steps.bump_version.outputs.new_version }}"
          echo "Current version was ${{ steps.bump_version.outputs.current_version }}"
          echo "New version is ${{ steps.bump_version.outputs.new_version }}"
          echo "Bump minor version completed successfully"
